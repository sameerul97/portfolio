{"version":3,"sources":["components/Effects.js","hooks/useCheckMobileScreen.ts","sections/Header.js","store/about/action-types/index.ts","store/about/reducers/index.ts","store/about/index.tsx","components/Tabs.tsx","components/Tab.tsx","components/Section.tsx","components/Badge.tsx","sections/About.tsx","store/work/action-types/index.ts","store/work/reducers/index.ts","store/work/index.tsx","components/ProjectCard.tsx","sections/Projects.tsx","App.tsx","index.tsx"],"names":["Effects","composer","useRef","bloomPass","useThree","scene","gl","size","camera","useEffect","current","setSize","width","height","useFrame","render","ref","args","attachArray","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","useCheckMobileScreen","useState","window","innerWidth","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","Hero","material","main","clock","mouse","rotation","z","getElapsedTime","y","THREE","lerp","x","Math","PI","position","detail","Instances","sphereRefs","forEach","el","map","pos","i","key","Sameer","gltf","useLoader","GLTFLoader","object","CameraController","vec","isMobileScreen","controls","OrbitControls","domElement","enableZoom","dispose","state","set","lookAt","SceneProps","bumpMap","useTextureLoader","envMap","useCubeTextureLoader","path","useResource","matRef","color","roughness","metalness","bumpScale","clearcoat","clearcoatRoughness","radius","distort","Header","colorManagement","alpha","fov","onCreated","toneMapping","outputEncoding","attach","near","far","showPanel","className","intensity","fallback","center","ActionType","AboutReducer","action","type","SET_ABOUT","aboutData","payload","selectedInfo","find","a","filterName","info","aboutButtonFilters","b","id","name","mainSkills","education","experience","SET_ERROR","error","initialState","Context","createContext","dispatch","AboutStore","children","useReducer","Provider","value","role","button","setFilterName","onClick","aria-selected","aria-disabled","aria-controls","tabIndex","Section","classes","Board","ClickableBadge","tag","href","link","target","rel","Badge","About","AboutTabs","useContext","fetch","response","json","data","FetchData","infos","post","Info","Fragment","Tabs","Tab","tags","ProfileImage","src","alt","WorkReducer","SET_WORK","workData","work","workFilterButtons","filterButtons","all","react","vanilla","webgl","database","node","filter","message","ProjectCard","project","data-testid","image","imageCaption","projectTags","ProjectImage","ProjectName","ProjectBody","Projects","ProjectError","undefined","BootstrapColumn","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7d2667eb.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useThree, useFrame, extend } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js'\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass })\n\nexport function Effects() {\n  const composer = useRef()\n  const bloomPass = useRef()\n\n  const { scene, gl, size, camera } = useThree()\n\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n\n  useFrame(() => {\n    composer.current.render()\n  }, 1)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <unrealBloomPass attachArray=\"passes\" ref={bloomPass} args={[0.2, 1.017, 0.021]} />\n    </effectComposer>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst useCheckMobileScreen = () => {\n  const [width, setWidth] = useState(window.innerWidth)\n  const handleWindowSizeChange = () => {\n    setWidth(window.innerWidth)\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowSizeChange)\n\n    return () => {\n      window.removeEventListener('resize', handleWindowSizeChange)\n    }\n  }, [])\n\n  return width <= 768\n}\n\nexport default useCheckMobileScreen\n","import * as THREE from 'three'\nimport React, { Suspense, useRef, useState, useEffect } from 'react'\nimport { Canvas, useFrame, useResource, useThree, useLoader } from 'react-three-fiber'\nimport { Html, Octahedron, useTextureLoader, useCubeTextureLoader, MeshDistortMaterial, Stats } from 'drei'\n\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\nimport { Effects } from '../components/Effects'\nimport useCheckMobileScreen from '../hooks/useCheckMobileScreen'\n// import { Effects } from './_Effect';\n\nfunction Hero({ material }) {\n  const main = useRef()\n\n  useFrame(({ clock, mouse }) => {\n    main.current.rotation.z = clock.getElapsedTime()\n    main.current.rotation.y = THREE.MathUtils.lerp(main.current.rotation.y, mouse.x * Math.PI, 0.1)\n    main.current.rotation.x = THREE.MathUtils.lerp(main.current.rotation.x, mouse.y * Math.PI, 0.1)\n  })\n\n  return <Octahedron args={[1, 5]} ref={main} material={material} position={[0, 0, -2]} detail={0} />\n}\n\nfunction Instances({ material }) {\n  const [sphereRefs] = useState(() => [])\n  const initialPositions = [\n    [-4, 2, -2],\n    [-5, 12, -2],\n    [-1, -1, -13],\n    [-6, -4, -10],\n    [6, -2, -3],\n    [3, 4, -12],\n    [5, -2, -23],\n    [4, 10, -20],\n  ]\n\n  useFrame(() => {\n    sphereRefs.forEach((el) => {\n      el.position.y += 0.02\n      if (el.position.y > 19) el.position.y = -18\n      el.rotation.x += 0.06\n      el.rotation.y += 0.06\n      el.rotation.z += 0.02\n    })\n  })\n\n  return (\n    <>\n      <Hero material={material} />\n      {initialPositions.map((pos, i) => (\n        <Octahedron\n          args={[1, 4]}\n          position={[pos[0], pos[1], pos[2]]}\n          material={material}\n          key={i}\n          ref={(ref) => (sphereRefs[i] = ref)}\n        />\n      ))}\n    </>\n  )\n}\n\nconst Sameer = () => {\n  const gltf = useLoader(GLTFLoader, './sameer_2.glb')\n\n  return <primitive object={gltf.scene} position={[0, -0.75, 0]} />\n}\n\nconst CameraController = () => {\n  const { camera, gl } = useThree()\n  const [vec] = useState(() => new THREE.Vector3())\n  const isMobileScreen = useCheckMobileScreen()\n\n  useEffect(() => {\n    let controls\n\n    if (!isMobileScreen) {\n      controls = new OrbitControls(camera, gl.domElement)\n      controls.enableZoom = false\n    }\n\n    return () => {\n      if (!isMobileScreen) {\n        controls.dispose()\n      }\n    }\n  }, [camera, gl, isMobileScreen])\n\n  useFrame((state) => {\n    // if (!isMobileScreen) {\n    state.camera.position.lerp(vec.set(-state.mouse.x * 6, 4 + state.mouse.y * 6, 14), 0.05)\n    state.camera.lookAt(0, 0, 0)\n    // }\n  })\n\n  return null\n}\n\nfunction SceneProps() {\n  const bumpMap = useTextureLoader('./bump.jpg')\n  const envMap = useCubeTextureLoader(['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'], { path: './cube/' })\n  const [matRef, material] = useResource()\n\n  return (\n    <>\n      <MeshDistortMaterial\n        ref={matRef}\n        envMap={envMap}\n        bumpMap={bumpMap}\n        color={'#010101'}\n        roughness={0.25}\n        metalness={1}\n        bumpScale={0.005}\n        clearcoat={1}\n        clearcoatRoughness={1}\n        radius={1}\n        distort={0.4}\n      />\n      {material && <Instances material={material} />}\n    </>\n  )\n}\n\nexport function Header() {\n  return (\n    <Canvas\n      colorManagement={false}\n      gl={{ alpha: false }}\n      camera={{ position: [0, 0, 100], fov: 18 }}\n      onCreated={({ gl, scene }) => {\n        gl.toneMapping = THREE.ACESFilmicToneMapping\n        gl.outputEncoding = THREE.sRGBEncoding\n      }}>\n      <color attach=\"background\" args={['#050505']} />\n      <fog color=\"#161616\" attach=\"fog\" near={8} far={30} />\n\n      <Stats showPanel={0} className=\"stats\" />\n      <CameraController />\n      <ambientLight color={'white'} intensity={2} />\n\n      <Suspense fallback={<Html center>Loading.</Html>}>\n        <SceneProps />\n        <Sameer />\n      </Suspense>\n\n      <Effects />\n    </Canvas>\n  )\n}\n","export enum ActionType {\n    SET_ABOUT = \"SET_ABOUT\",\n    mainSkills = \"mainSkills\",\n    education = \"education\",\n    experience = \"experience\",\n    SET_ERROR = \"SET_ERROR\"\n}\n","import { ActionType } from \"../action-types/index\"\nimport { Action } from \"../actions\"\nimport type { InitialStateType, About } from '../state'\n\nconst AboutReducer = (state: InitialStateType, action: Action): InitialStateType => {\n    switch (action.type) {\n        case ActionType.SET_ABOUT: {\n\n            return {\n                ...state,\n                aboutData: action.payload,\n                selectedInfo: action.payload.find((a: About) => a.filterName === 'mainSkills').info,\n                aboutButtonFilters: action.payload.map((b: About) => {\n                    return { id: b.id, filterName: b.filterName, name: b.name }\n                }),\n            }\n        }\n\n        case ActionType.mainSkills: {\n            return {\n                ...state,\n                selectedInfo: state.aboutData.find((a: About) => a.filterName === action.type)!.info,\n            }\n        }\n\n        case ActionType.education: {\n            return {\n                ...state,\n                selectedInfo: state.aboutData.find((a: About) => a.filterName === action.type)!.info,\n            }\n        }\n\n        case ActionType.experience: {\n            return {\n                ...state,\n                selectedInfo: state.aboutData.find((a: About) => a.filterName === action.type)!.info,\n            }\n        }\n\n        case ActionType.SET_ERROR: {\n            return {\n                ...state,\n                error: action.payload,\n            }\n        }\n\n        default:\n            return state;\n\n    }\n}\n\nexport default AboutReducer\n","import React, { createContext, useReducer, Dispatch } from 'react'\nimport type { ReactNode } from 'react'\nimport AboutReducer from './reducers'\nimport type { InitialStateType } from './state'\nimport { Action } from './actions'\n\nconst initialState: InitialStateType = {\n  // aboutData holds original source\n  aboutData: [],\n  // selectedInfo holds array of object for selected filter\n  selectedInfo: [],\n  aboutButtonFilters: [],\n  error: null,\n}\n\nconst Context = createContext<{\n  state: InitialStateType\n  dispatch: Dispatch<Action>\n}>({\n  state: initialState,\n  dispatch: () => null,\n})\n\nconst AboutStore = ({ children }: { children: ReactNode }) => {\n  const [state, dispatch] = useReducer(AboutReducer, initialState)\n\n  return <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>\n}\n\nexport { Context }\n\nexport default AboutStore\n","import React from 'react'\n\nimport { TabsChildren } from '../interfaces'\n\nexport default function ({ children }: TabsChildren) {\n  return (\n    <ul className=\"tabs\" role=\"tablist\">\n      {children}\n    </ul>\n  )\n}\n","import React from 'react'\nimport { Tabprops } from '../interfaces'\n\nexport default function ({ button, filterName, dispatch, setFilterName }: Tabprops) {\n  return (\n    <li\n      className={`text-capitalize tabs__tab ${filterName === button.filterName ? 'tabs__tab--selected' : ''}  `}\n      onClick={() => {\n        dispatch({ type: button.filterName })\n        setFilterName(button.filterName)\n      }}\n      role=\"tab\"\n      aria-selected={filterName === button.filterName}\n      aria-disabled=\"false\"\n      aria-controls=\"react-tabs-1\"\n      tabIndex={0}>\n      {button.name}\n    </li>\n  )\n}\n","import React, { ReactNode } from 'react'\n\nimport { SectionProps } from '../interfaces'\n\n/* Params: {id, classes} Classes param accepts string. I.e override section bg color with bg-red */\nexport default function Section({ id, classes, children }: SectionProps) {\n  return (\n    <section className={`utils ${classes ? classes : ''}`} id={id ? id : ''}>\n      <Board>{children}</Board>\n    </section>\n  )\n}\n\nconst Board = ({ children }: { children: ReactNode }) => <div className=\"m-auto rounded board\">{children}</div>\n\nexport { Board }\n","import React from 'react'\nimport { ClickableBadgeprops, BadgeProps } from '../interfaces'\n\nconst ClickableBadge = ({ tag }: ClickableBadgeprops) => (\n  <a href={tag.link} target=\"_blank\" rel=\"noopener noreferrer\">\n    <span className=\"badge rounded-pill bg-secondary mr-1 p-1 px-2 text-white font-weight-light\">{tag.name}</span>\n  </a>\n)\n\nconst Badge = ({ tag, classes }: BadgeProps) => (\n  <span className={`badge rounded-pill bg-dark mr-1 p-1 px-2 text-white font-weight-light ${classes}`}>{tag.name}</span>\n)\n\nexport { ClickableBadge, Badge }\n","import React, { useContext, useEffect, useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { Context } from '../store/about'\nimport { Info as IInfo } from '../store/about/state'\n\nimport Tabs from '../components/Tabs'\nimport Tab from '../components/Tab'\nimport Section from '../components/Section'\nimport { Badge } from '../components/Badge'\nimport { ActionType } from '../store/about/action-types'\n\nexport function About() {\n  return (\n    <Section id=\"about\">\n      <div className=\"row\">\n        <div className=\"col-lg-6 text-center\">\n          <ProfileImage />\n        </div>\n        <div className=\"col-lg-6 pt-3 pt-lg-0\">\n          <div className=\"text-left\">\n            <h1>About Me</h1>\n            <p>\n              Creative web developer with a flair for bringing innovative UX design to life. 2+ years of experience with\n              various web technologies.\n            </p>\n            <AboutTabs />\n          </div>\n        </div>\n      </div>\n    </Section>\n  )\n}\n\nfunction AboutTabs() {\n  const { state, dispatch } = useContext(Context)\n  const [filterName, setFilterName] = useState('mainSkills')\n\n  useEffect(() => {\n    const FetchData = async () => {\n      try {\n        const response = await fetch('./about.json')\n        const data = await response.json()\n\n        dispatch({ type: ActionType.SET_ABOUT, payload: data })\n      } catch (error) {\n        dispatch({ type: ActionType.SET_ERROR, payload: 'Unable to load about' })\n      }\n    }\n\n    FetchData()\n  }, [dispatch])\n\n  let infos: React.ReactNode = <p>Loading...</p>\n\n  if (state.error) {\n    infos = (\n      <p>\n        <strong>{state.error}</strong>\n      </p>\n    )\n  }\n\n  if (!state.error && state.selectedInfo) {\n    infos = state.selectedInfo.map((post: IInfo) => {\n      return <Info key={post.id} post={post} />\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <Tabs>\n        {state.aboutButtonFilters.map((button) => (\n          <Tab\n            key={button.id}\n            button={button}\n            filterName={filterName}\n            dispatch={dispatch}\n            setFilterName={setFilterName}\n          />\n        ))}\n      </Tabs>\n\n      {infos}\n    </React.Fragment>\n  )\n}\n\nfunction Info({ post }: { post: IInfo }) {\n  return (\n    <div className=\"my-2 mb-3 tabs-detail\">\n      <h6 className=\"mb-1\">{post.name}</h6>\n      {post.info && <p className=\"my-0 py-0 fw-light\">{post.info}</p>}\n\n      {post.tags?.map((tag, i) => (\n        <Badge key={i} tag={tag} classes={'bg-white text-dark font-weight-normal text-uppercase hoverable-badge'} />\n      ))}\n    </div>\n  )\n}\n\nconst ProfileImage = () => <img src=\"./profile.png\" alt=\"sameer_image\" className=\"img-fluid  rounded\" />\n\nexport { AboutTabs }\n","export enum ActionType {\n    SET_WORK = \"SET_WORK\",\n    all = \"all\",\n    react = \"react\",\n    vanilla = \"vanilla\",\n    webgl = \"webgl\",\n    database = \"database\",\n    node = \"node\",\n    SET_ERROR = \"SET_ERROR\"\n}","import { ActionType } from \"../action-types/index\"\nimport { Actions } from \"../actions\"\nimport type { InitialStateType, WorkButtonFilters } from '../state'\n\nfunction WorkReducer(state: InitialStateType, action: Actions) {\n    switch (action.type) {\n        case ActionType.SET_WORK: {\n            return {\n                ...state,\n                workData: action.payload.work,\n                selectedInfo: action.payload.work,\n                workFilterButtons: action.payload.filterButtons.map((b: WorkButtonFilters) => {\n                    return { id: b.id, filterName: b.filterName, name: b.filterName }\n                }),\n            }\n        }\n\n        case ActionType.all:\n            return {\n                ...state,\n                selectedInfo: state.workData,\n            }\n\n        case ActionType.react:\n            return {\n                ...state,\n                selectedInfo: state.workData.filter((i) => i.filterName === action.type),\n            }\n\n        case ActionType.vanilla:\n            return {\n                ...state,\n                selectedInfo: state.workData.filter((i) => i.filterName === action.type),\n            }\n\n        case ActionType.webgl:\n            return {\n                ...state,\n                selectedInfo: state.workData.filter((i) => i.filterName === action.type),\n            }\n\n        case ActionType.database:\n            return {\n                ...state,\n                selectedInfo: state.workData.filter((i) => i.filterName === action.type),\n            }\n\n        case ActionType.node:\n            return {\n                ...state,\n                selectedInfo: state.workData.filter((i) => i.filterName === action.type),\n            }\n\n        case ActionType.SET_ERROR: {\n            return {\n                ...state,\n                error: action.payload.message,\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default WorkReducer\n\n","import React, { createContext, useReducer, Dispatch } from 'react'\nimport type { ReactNode } from 'react'\nimport WorkReducer from './reducers'\nimport type { InitialStateType } from './state'\nimport { Actions } from './actions'\n\nconst initialState: InitialStateType = {\n  workData: [],\n  selectedInfo: [],\n  workFilterButtons: [],\n  error: null,\n}\n\nconst Context = createContext<{\n  state: InitialStateType\n  dispatch: Dispatch<Actions>\n}>({\n  state: initialState,\n  dispatch: () => null,\n})\n\nconst AboutStore = ({ children }: { children: ReactNode }) => {\n  const [state, dispatch] = useReducer(WorkReducer, initialState)\n\n  return <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>\n}\n\nexport { Context }\n\nexport default AboutStore\n","import React, { ReactNode } from 'react'\nimport { ClickableBadge, Badge } from './Badge'\nimport { ProjectCardProps } from '../interfaces'\n\nconst ProjectCard = ({ project }: { project: ProjectCardProps }) => {\n  return (\n    <div className=\"border-light p-1\" data-testid={project.id}>\n      <ProjectImage image={project.image} imageCaption={project.name} />\n\n      <ProjectBody>\n        <ProjectName name={project.name} />\n\n        {project.projectTags.map((tag) =>\n          tag.link ? <ClickableBadge key={tag.id} tag={tag} /> : <Badge key={tag.id} tag={tag} />\n        )}\n      </ProjectBody>\n    </div>\n  )\n}\n\nconst ProjectImage = ({ image, imageCaption }: { image: string; imageCaption: string }) => (\n  <img src={image} className=\"card-img-top\" alt={imageCaption} />\n)\n\nconst ProjectName = ({ name }: { name: string }) => <h6 className=\"card-text text-dark\">{name}</h6>\n\nconst ProjectBody = ({ children }: { children: ReactNode }) => <div className=\"card-body pl-2\">{children}</div>\n\nexport { ProjectCard, ProjectImage, ProjectName, ProjectBody }\n","import React, { useContext, useState, useEffect, ReactNode } from 'react'\n\nimport { Context } from '../store/work'\n\nimport Section from '../components/Section'\nimport Tabs from '../components/Tabs'\nimport Tab from '../components/Tab'\n\nimport { ProjectCard } from '../components/ProjectCard'\nimport { ActionType } from '../store/work/action-types'\n\nexport function Projects() {\n  const { state, dispatch } = useContext(Context)\n  const [filterName, setFilterName] = useState('all')\n\n  useEffect(() => {\n    const FetchData = async () => {\n      try {\n        const response = await fetch('./work.json')\n        const data = await response.json()\n\n        dispatch({ type: ActionType.SET_WORK, payload: data })\n      } catch (error) {\n        dispatch({ type: ActionType.SET_ERROR, payload: { message: 'Unable to load work' } })\n      }\n    }\n\n    FetchData()\n  }, [dispatch])\n\n  let ProjectError = undefined\n\n  if (state.error) {\n    ProjectError = (\n      <p>\n        <strong>{state.error}</strong>\n      </p>\n    )\n  }\n\n  return (\n    <Section id=\"projects\" classes=\"min-vh-100\">\n      <h1>My Work</h1>\n      {ProjectError}\n      <Tabs>\n        {state.workFilterButtons.map((button) => (\n          <Tab\n            key={button.id}\n            button={button}\n            filterName={filterName}\n            dispatch={dispatch}\n            setFilterName={setFilterName}\n          />\n        ))}\n      </Tabs>\n\n      <div className=\"card-columns\">\n        {state.selectedInfo.map((project) => (\n          <BootstrapColumn key={project.id}>\n            <ProjectCard project={project} />\n          </BootstrapColumn>\n        ))}\n      </div>\n    </Section>\n  )\n}\n\nconst BootstrapColumn = ({ children }: { children: ReactNode }) => <div className=\"card my-2\">{children}</div>\n","import React from 'react'\n\nimport { Header } from './sections/Header'\nimport { About } from './sections/About'\n\nimport AboutStore from './store/about'\nimport WorkStore from './store/work'\n// import WorkStore from './store/WorkStore'\n\nimport { Projects } from './sections/Projects'\n\nexport default function App() {\n  return (\n    <React.Fragment>\n      <div id=\"webgl\">\n        <Header />\n      </div>\n\n      <AboutStore>\n        <About />\n      </AboutStore>\n\n      <WorkStore>\n        <Projects />\n      </WorkStore>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}